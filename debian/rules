#!/usr/bin/make -f
SHELL := sh -e

include debian/rules.defs

SIGN = debian/bin/sign.py

DEB_HOST_ARCH  := $(shell dpkg-architecture -qDEB_HOST_ARCH)

PLATFORM := UNKNOWN-PLATFORM
EFI_NAME := UNKNOWN-EFI-NAME

ifeq ($(DEB_HOST_ARCH),amd64)
PLATFORM := x86_64-efi
EFI_NAME := x64
endif

ifeq ($(DEB_HOST_ARCH),arm64)
PLATFORM := arm64-efi
EFI_NAME := aa64
endif

UNSIGNED_PACKAGE_NAME = grub-efi-$(DEB_HOST_ARCH)-unsigned
PACKAGE_NAME = grub-efi-$(DEB_HOST_ARCH)-signed
PACKAGE_DIR = debian/$(PACKAGE_NAME)
SIGNATURE_DIR = debian/signatures/$(UNSIGNED_PACKAGE_NAME)

%:
	dh $@

override_dh_auto_install:
	mkdir -p $(PACKAGE_DIR)/usr/lib/grub/$(PLATFORM)-signed
	for BIN in grub gcd grubnet; do \
		rsync -a /usr/lib/grub/$(PLATFORM)-signed/"$$BIN"$(EFI_NAME).efi $(PACKAGE_DIR)/usr/lib/grub/$(PLATFORM)-signed/; \
		if [ -f $(SIGNATURE_DIR)/usr/lib/grub/$(PLATFORM)-signed/"$$BIN"$(EFI_NAME).efi.sig ]; then \
			sbattach --attach $(SIGNATURE_DIR)/usr/lib/grub/$(PLATFORM)-signed/"$$BIN"$(EFI_NAME).efi.sig \
				$(PACKAGE_DIR)/usr/lib/grub/$(PLATFORM)-signed/"$$BIN"$(EFI_NAME).efi; \
		else \
			echo "$(SIGNATURE_DIR)/usr/lib/grub/$(PLATFORM)-signed/$$BIN$(EFI_NAME).efi.sig not found!"; \
			exit 1; \
		fi; \
	done

maintainerclean:
	rm -rf debian/localpackages

sign:
	for GRUB_ARCH in $(GRUB_ARCHS); do \
		$(SIGN) "$(GRUB_VERSION)" "$$GRUB_ARCH" "$(UNSIGNED_PACKAGE_NAME)" "$(GRUB_PRIVKEY)" "$(GRUB_CERT)" "$(MIRROR_URL)" "$(MIRROR_SUITE)" "$(SIGNER)" "$(NSS_DIR)" "$(NSS_TOKEN)"; \
	done

.PHONY: maintainerclean sign
